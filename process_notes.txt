Pid1 = Arrival_time(), Burst_time()
Pid2 = Arrival_time(), Burst_time()
Pid3 = Arrival_time(), Burst_time()

We're doing First Come First Serve (FCFS).
For FCFS, priority is given to the one that appears first (No need to consider burst time here).

Waiting_time(formula) = tba
Turnaround_time(formula) = completion_time - Arrival_time

New = Fetus (can't walk)
Ready = Arrival (in queue) (first steps? waddling?) 
Running = On Gantt chart (execution)
Waiting = (maybe) if no termination condition
Terminated = end

waiting_time = arrival(or running) - running
remaining_time = running to terminated

		ales idea numero dos: 
		[NEW] Process 1: (pid: ##); Arrival Time: 0; CPU Burst Time: 3
		... (new to ready)
		REMAINING TIME: 
		... (ready to running)
		REMAINING TIME: 
		check if i/o is required. 
			if yes, (running to waiting) -- REMAINING TIME: 
			if not (running to terminated)
		WAITING TIME: __
		TURNAROUND TIME:  
		

		[NEW] Process 2: (pid: ##); Arrival Time: 0; CPU Burst Time: 2;
		... (new to ready)
		REMAINING TIME:
		... (ready to running)
		REMAINING TIME:
		check if i/o is required.
			if yes, (running to waiting) -- REMAINING TIME:
			if not (running to terminated)
		WAITING TIME: __
		TURNAROUND TIME:


		[NEW] Process 3: (pid: ##); Arrival Time: 0; CPU Burst Time: 2; 
		... (new to ready)
		REMAINING TIME:
		... (ready to running)
		REMAINING TIME:
		check if i/o is required.
			if yes, (running to waiting) -- REMAINING TIME:
			if not (running to terminated)
		WAITING TIME: __
		TURNAROUND TIME:
